{
  "version": 3,
  "sources": ["../../src/lib/decompose-input-value.ts"],
  "sourcesContent": ["import { useStore } from \"../store/store\";\nimport { filterInfo } from \"./filter-info\";\nimport { errorLogging } from \"./logging\";\nexport const decomposeInputValue = async (\n\tvoiceString: string,\n): Promise<{ name: string; timerSec: number; deleteVal: number; inputString: string }> => {\n\tconst store = useStore();\n\tconst _this = store._this;\n\n\ttry {\n\t\tlet inputDecomposed = voiceString.split(\",\");\n\t\tinputDecomposed = inputDecomposed[0].split(\" \");\n\n\t\tconst { timerString, name, deleteVal, inputString } = await filterInfo(inputDecomposed);\n\n\t\treturn { name, timerSec: eval(timerString), deleteVal, inputString };\n\t} catch (e: any) {\n\t\terrorLogging(\"Error in decomposeInputValue\", e, _this);\n\t\treturn { name: \"\", timerSec: 0, deleteVal: 0, inputString: \"\" };\n\t}\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,yBAA2B;AAC3B,qBAA6B;AACtB,MAAM,sBAAsB,OAClC,gBACyF;AACzF,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AAEpB,MAAI;AACH,QAAI,kBAAkB,YAAY,MAAM,GAAG;AAC3C,sBAAkB,gBAAgB,CAAC,EAAE,MAAM,GAAG;AAE9C,UAAM,EAAE,aAAa,MAAM,WAAW,YAAY,IAAI,UAAM,+BAAW,eAAe;AAEtF,WAAO,EAAE,MAAM,UAAU,KAAK,WAAW,GAAG,WAAW,YAAY;AAAA,EACpE,SAAS,GAAQ;AAChB,qCAAa,gCAAgC,GAAG,KAAK;AACrD,WAAO,EAAE,MAAM,IAAI,UAAU,GAAG,WAAW,GAAG,aAAa,GAAG;AAAA,EAC/D;AACD;",
  "names": []
}
