{
  "version": 3,
  "sources": ["../../src/lib/generate-values.ts"],
  "sourcesContent": ["import { Store, useStore } from \"../store/store\";\nimport { GenerateTimeStringObject } from \"../types\";\nimport { secToHourMinSec } from \"./global\";\nimport { Timer } from \"./timer-data\";\n\nexport const generateValues = (timer: Timer, sec: number, index: any, inputString: string, name: string): number => {\n\tconst store = useStore();\n\n\tconst timeLeft = timer.endTimeNumber - new Date().getTime(); // Restlaufzeit errechnen in millisec\n\tconst timeLeftSec = Math.round(timeLeft / 1000); // Aus timeLeft(Millisekunden) glatte Sekunden erstellen\n\tconst result = secToHourMinSec(timeLeftSec, true);\n\tlet { hour, minutes, seconds } = result;\n\tconst { string: lengthTimer } = result;\n\n\tconst timeString1 = hour + \":\" + minutes + \":\" + seconds + getTimeUnit(timeLeftSec, store);\n\n\tconst { timeString } = isShorterThanAMinute(\n\t\tisShorterThanSixtyMinutes(\n\t\t\tisShorterOrEqualToSixtyFiveMinutes(isGreaterThanSixtyFiveMinutes(hour, minutes, seconds, store)),\n\t\t),\n\t);\n\n\tif (!timer.extendOrShortenTimer) {\n\t\ttimer.voiceInputAsSeconds = sec;\n\t}\n\n\t({ hour, minutes, seconds } = resetSuperiorValue(hour, minutes, seconds));\n\n\ttimer.hour = hour;\n\ttimer.minute = minutes;\n\ttimer.second = seconds;\n\ttimer.stringTimer = timeString1;\n\ttimer.stringTimer2 = timeString;\n\ttimer.remainingTimeInSeconds = timeLeftSec;\n\ttimer.index = index;\n\ttimer.inputString = inputString;\n\ttimer.percent = Math.round((timeLeftSec / timer.voiceInputAsSeconds) * 100);\n\ttimer.percent2 = 100 - Math.round((timeLeftSec / timer.voiceInputAsSeconds) * 100);\n\ttimer.lengthTimer = lengthTimer;\n\ttimer.name = setTimerNameIfNotExist(name);\n\n\treturn timeLeftSec;\n};\n\nfunction setTimerNameIfNotExist(name: string): string {\n\tif (name == \"\" || name == null || name == undefined) {\n\t\treturn \"Timer\";\n\t}\n\treturn name;\n}\n\nfunction resetSuperiorValue(\n\thour: string,\n\tminutes: string,\n\tseconds: string,\n): { hour: string; minutes: string; seconds: string } {\n\tif (hour === \"00\") {\n\t\thour = \"\";\n\t\tif (minutes === \"00\") {\n\t\t\tminutes = \"\";\n\t\t\tif (seconds === \"00\") seconds = \"\";\n\t\t}\n\t}\n\treturn { hour, minutes, seconds };\n}\n\nfunction isShorterThanAMinute({ minutes, seconds, store, timeString }: GenerateTimeStringObject): {\n\ttimeString: string;\n} {\n\tif (parseInt(minutes) == 0) {\n\t\treturn { timeString: seconds + \" \" + store.unitSecond3 };\n\t}\n\treturn { timeString };\n}\n\nfunction isShorterOrEqualToSixtyFiveMinutes({\n\thour,\n\tminutes,\n\tseconds,\n\tstore,\n\ttimeString,\n}: GenerateTimeStringObject): GenerateTimeStringObject {\n\tif (parseInt(hour) === 1 && parseInt(minutes) <= 5) {\n\t\tconst timeString = hour + \":\" + minutes + \":\" + seconds + \" \" + store.unitHour3;\n\t\treturn { timeString, hour, minutes, seconds, store };\n\t}\n\treturn { timeString, hour, minutes, seconds, store };\n}\n\nfunction isShorterThanSixtyMinutes({\n\thour,\n\tminutes,\n\tseconds,\n\tstore,\n\ttimeString,\n}: GenerateTimeStringObject): GenerateTimeStringObject {\n\tif (parseInt(hour) == 0) {\n\t\tconst timeString = minutes + \":\" + seconds + \" \" + store.unitMinute3;\n\t\treturn { timeString, hour, minutes, seconds, store };\n\t}\n\treturn { timeString, hour, minutes, seconds, store };\n}\n\nfunction isGreaterThanSixtyFiveMinutes(\n\thour: string,\n\tminutes: string,\n\tseconds: string,\n\tstore: Store,\n): GenerateTimeStringObject {\n\tif (parseInt(hour) > 1 || (parseInt(hour) === 1 && parseInt(minutes) > 5)) {\n\t\tconst timeString = hour + \":\" + minutes + \":\" + seconds + \" \" + store.unitHour3;\n\t\treturn { timeString, hour, minutes, seconds, store };\n\t}\n\treturn { timeString: \"\", hour, minutes, seconds, store };\n}\n\nfunction getTimeUnit(timeLeftSec: number, store: Store): string {\n\tif (timeLeftSec >= 3600) {\n\t\treturn ` ${store.unitHour3}`;\n\t}\n\tif (timeLeftSec >= 60) {\n\t\treturn ` ${store.unitMinute3}`;\n\t}\n\treturn ` ${store.unitSecond3}`;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgC;AAEhC,oBAAgC;AAGzB,MAAM,iBAAiB,CAAC,OAAc,KAAa,OAAY,aAAqB,SAAyB;AACnH,QAAM,YAAQ,uBAAS;AAEvB,QAAM,WAAW,MAAM,iBAAgB,oBAAI,KAAK,GAAE,QAAQ;AAC1D,QAAM,cAAc,KAAK,MAAM,WAAW,GAAI;AAC9C,QAAM,aAAS,+BAAgB,aAAa,IAAI;AAChD,MAAI,EAAE,MAAM,SAAS,QAAQ,IAAI;AACjC,QAAM,EAAE,QAAQ,YAAY,IAAI;AAEhC,QAAM,cAAc,OAAO,MAAM,UAAU,MAAM,UAAU,YAAY,aAAa,KAAK;AAEzF,QAAM,EAAE,WAAW,IAAI;AAAA,IACtB;AAAA,MACC,mCAAmC,8BAA8B,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,IAChG;AAAA,EACD;AAEA,MAAI,CAAC,MAAM,sBAAsB;AAChC,UAAM,sBAAsB;AAAA,EAC7B;AAEA,GAAC,EAAE,MAAM,SAAS,QAAQ,IAAI,mBAAmB,MAAM,SAAS,OAAO;AAEvE,QAAM,OAAO;AACb,QAAM,SAAS;AACf,QAAM,SAAS;AACf,QAAM,cAAc;AACpB,QAAM,eAAe;AACrB,QAAM,yBAAyB;AAC/B,QAAM,QAAQ;AACd,QAAM,cAAc;AACpB,QAAM,UAAU,KAAK,MAAO,cAAc,MAAM,sBAAuB,GAAG;AAC1E,QAAM,WAAW,MAAM,KAAK,MAAO,cAAc,MAAM,sBAAuB,GAAG;AACjF,QAAM,cAAc;AACpB,QAAM,OAAO,uBAAuB,IAAI;AAExC,SAAO;AACR;AAEA,SAAS,uBAAuB,MAAsB;AACrD,MAAI,QAAQ,MAAM,QAAQ,QAAQ,QAAQ,QAAW;AACpD,WAAO;AAAA,EACR;AACA,SAAO;AACR;AAEA,SAAS,mBACR,MACA,SACA,SACqD;AACrD,MAAI,SAAS,MAAM;AAClB,WAAO;AACP,QAAI,YAAY,MAAM;AACrB,gBAAU;AACV,UAAI,YAAY;AAAM,kBAAU;AAAA,IACjC;AAAA,EACD;AACA,SAAO,EAAE,MAAM,SAAS,QAAQ;AACjC;AAEA,SAAS,qBAAqB,EAAE,SAAS,SAAS,OAAO,WAAW,GAElE;AACD,MAAI,SAAS,OAAO,KAAK,GAAG;AAC3B,WAAO,EAAE,YAAY,UAAU,MAAM,MAAM,YAAY;AAAA,EACxD;AACA,SAAO,EAAE,WAAW;AACrB;AAEA,SAAS,mCAAmC;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAAuD;AACtD,MAAI,SAAS,IAAI,MAAM,KAAK,SAAS,OAAO,KAAK,GAAG;AACnD,UAAMA,cAAa,OAAO,MAAM,UAAU,MAAM,UAAU,MAAM,MAAM;AACtE,WAAO,EAAE,YAAAA,aAAY,MAAM,SAAS,SAAS,MAAM;AAAA,EACpD;AACA,SAAO,EAAE,YAAY,MAAM,SAAS,SAAS,MAAM;AACpD;AAEA,SAAS,0BAA0B;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAAuD;AACtD,MAAI,SAAS,IAAI,KAAK,GAAG;AACxB,UAAMA,cAAa,UAAU,MAAM,UAAU,MAAM,MAAM;AACzD,WAAO,EAAE,YAAAA,aAAY,MAAM,SAAS,SAAS,MAAM;AAAA,EACpD;AACA,SAAO,EAAE,YAAY,MAAM,SAAS,SAAS,MAAM;AACpD;AAEA,SAAS,8BACR,MACA,SACA,SACA,OAC2B;AAC3B,MAAI,SAAS,IAAI,IAAI,KAAM,SAAS,IAAI,MAAM,KAAK,SAAS,OAAO,IAAI,GAAI;AAC1E,UAAM,aAAa,OAAO,MAAM,UAAU,MAAM,UAAU,MAAM,MAAM;AACtE,WAAO,EAAE,YAAY,MAAM,SAAS,SAAS,MAAM;AAAA,EACpD;AACA,SAAO,EAAE,YAAY,IAAI,MAAM,SAAS,SAAS,MAAM;AACxD;AAEA,SAAS,YAAY,aAAqB,OAAsB;AAC/D,MAAI,eAAe,MAAM;AACxB,WAAO,IAAI,MAAM,SAAS;AAAA,EAC3B;AACA,MAAI,eAAe,IAAI;AACtB,WAAO,IAAI,MAAM,WAAW;AAAA,EAC7B;AACA,SAAO,IAAI,MAAM,WAAW;AAC7B;",
  "names": ["timeString"]
}
