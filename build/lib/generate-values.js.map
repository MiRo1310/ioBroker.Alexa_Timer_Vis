{
  "version": 3,
  "sources": ["../../src/lib/generate-values.ts"],
  "sourcesContent": ["import { Store, useStore } from \"../store/store\";\r\nimport { GenerateTimeStringObject } from '../types';\r\nimport { secToHourMinSec } from \"./global\";\r\nimport { Timer } from \"./timer-data\";\r\n\r\nexport const generateValues = (timer: Timer, sec: number, index: any, inputString: string, name: string): number => {\r\n\tconst store = useStore();\r\n\r\n\r\n\tconst timeLeft = timer.endTime - new Date().getTime(); // Restlaufzeit errechnen in millisec\r\n\tconst timeLeftSec = Math.round(timeLeft / 1000); // Aus timeLeft(Millisekunden) glatte Sekunden erstellen\r\n\tconst result = secToHourMinSec(timeLeftSec, true);\r\n\tlet { hour, minutes, seconds } = result;\r\n\tconst { string: lengthTimer } = result;\r\n\r\n\tconst timeString1 = hour + \":\" + minutes + \":\" + seconds + getTimeUnit(timeLeftSec, store);\r\n\r\n\tconst { timeString } = isShorterThanAMinute(\r\n\t\tisShorterThanSixtyMinutes(isShorterOrEqualToSixtyFiveMinutes(isGreaterThanSixtyFiveMinutes(hour, minutes, seconds, store))));\r\n\r\n\tif (!timer.changeValue) {\r\n\t\ttimer.onlySec = sec;\r\n\t}\r\n\r\n\t({ hour, minutes, seconds } = resetSuperiorValue(hour, minutes, seconds));\r\n\r\n\ttimer.hour = hour;\r\n\ttimer.minute = minutes;\r\n\ttimer.second = seconds;\r\n\ttimer.string_Timer = timeString1;\r\n\ttimer.string_2_Timer = timeString;\r\n\ttimer.timeLeftSec = timeLeftSec;\r\n\ttimer.index = index;\r\n\ttimer.inputString = inputString;\r\n\ttimer.percent = Math.round((timeLeftSec / timer.onlySec) * 100);\r\n\ttimer.percent2 = 100 - Math.round((timeLeftSec / timer.onlySec) * 100);\r\n\ttimer.lengthTimer = lengthTimer;\r\n\ttimer.name = setTimerNameIfNotExist(name)\r\n\r\n\treturn timeLeftSec;\r\n};\r\n\r\nfunction setTimerNameIfNotExist(name: string): string {\r\n\tif (name == \"\" || name == null || name == undefined) {\r\n\t\treturn \"Timer\";\r\n\t}\r\n\treturn name;\r\n}\r\n\r\nfunction resetSuperiorValue(\r\n\thour: string,\r\n\tminutes: string,\r\n\tseconds: string,\r\n): { hour: string; minutes: string; seconds: string } {\r\n\tif (hour === \"00\") {\r\n\t\thour = \"\";\r\n\t\tif (minutes === \"00\") {\r\n\t\t\tminutes = \"\";\r\n\t\t\tif (seconds === \"00\") seconds = \"\";\r\n\t\t}\r\n\t}\r\n\treturn { hour, minutes, seconds };\r\n}\r\n\r\nfunction isShorterThanAMinute({ minutes, seconds, store, timeString }: GenerateTimeStringObject): { timeString: string } {\r\n\tif (parseInt(minutes) == 0) {\r\n\t\treturn { timeString: seconds + \" \" + store.unitSecond3 };\r\n\t}\r\n\treturn { timeString };\r\n}\r\n\r\nfunction isShorterOrEqualToSixtyFiveMinutes({ hour, minutes, seconds, store, timeString }: GenerateTimeStringObject\r\n): GenerateTimeStringObject {\r\n\tif (parseInt(hour) === 1 && parseInt(minutes) <= 5) {\r\n\t\tconst timeString = hour + \":\" + minutes + \":\" + seconds + \" \" + store.unitHour3;\r\n\t\treturn { timeString, hour, minutes, seconds, store };\r\n\t}\r\n\treturn { timeString, hour, minutes, seconds, store };\r\n}\r\n\r\nfunction isShorterThanSixtyMinutes({ hour, minutes, seconds, store, timeString }: GenerateTimeStringObject\r\n): GenerateTimeStringObject {\r\n\tif (parseInt(hour) == 0) {\r\n\t\tconst timeString = minutes + \":\" + seconds + \" \" + store.unitMinute3\r\n\t\treturn { timeString, hour, minutes, seconds, store };\r\n\t}\r\n\treturn { timeString, hour, minutes, seconds, store };\r\n}\r\n\r\nfunction isGreaterThanSixtyFiveMinutes(hour: string, minutes: string, seconds: string, store: Store): GenerateTimeStringObject {\r\n\tif (parseInt(hour) > 1 || (parseInt(hour) === 1 && parseInt(minutes) > 5)) {\r\n\t\tconst timeString = hour + \":\" + minutes + \":\" + seconds + \" \" + store.unitHour3\r\n\t\treturn { timeString, hour, minutes, seconds, store };\r\n\t}\r\n\treturn { timeString: \"\", hour, minutes, seconds, store };\r\n}\r\n\r\nfunction getTimeUnit(timeLeftSec: number, store: Store): string {\r\n\tif (timeLeftSec >= 3600) {\r\n\t\treturn ` ${store.unitHour3}`;\r\n\t}\r\n\tif (timeLeftSec >= 60) {\r\n\t\treturn ` ${store.unitMinute3}`;\r\n\t}\r\n\treturn ` ${store.unitSecond3}`;\r\n}\r\n"],
  "mappings": "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",
  "names": ["timeString"]
}
