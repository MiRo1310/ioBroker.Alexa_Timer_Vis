{
  "version": 3,
  "sources": ["../../src/lib/timer-add.ts"],
  "sourcesContent": ["import { startTimer } from './start-timer';\nimport { createState } from './state';\nimport { timerObject } from './timer-data';\nimport { writeStateIntervall } from './write-state-interval';\nimport { isStringEmpty } from './global';\nimport { errorLogging } from './logging';\nimport { useStore } from '../store/store';\n\nexport const timerAdd = (decomposeName: string, timerSec: number, decomposeInputString: string): void => {\n    const { _this } = useStore();\n    const name = decomposeName;\n\n    if (timerSec && timerSec != 0) {\n        let nameExist = false;\n\n        for (const element in timerObject.timer) {\n            if (timerObject.timer[element as keyof typeof timerObject.timer]?.name == name && !isStringEmpty(name)) {\n                nameExist = true;\n                //FIXME: Break evtl entfernen\n                break;\n            }\n        }\n\n        if (!nameExist) {\n            timerObject.timerActive.timerCount++;\n\n            createState(timerObject.timerActive.timerCount).catch((e: any) => {\n                errorLogging({ text: 'Error in timerAdd', error: e, _this });\n            });\n\n            const timer = `timer${timerObject.timerActive.timerCount}`;\n\n            if (timerObject.timerActive.timer[timer as keyof typeof timerObject.timerActive.timer] === undefined) {\n                timerObject.timerActive.timer[timer as keyof typeof timerObject.timerActive.timer] = false;\n\n                timerObject.timer[timer as keyof typeof timerObject.timer] = {} as (typeof timerObject.timer)['timer1'];\n            }\n\n            startTimer(timerSec, name, decomposeInputString).catch((e: any) => {\n                errorLogging({ text: 'Error in timerAdd', error: e, _this });\n            });\n\n            writeStateIntervall();\n        }\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA2B;AAC3B,mBAA4B;AAC5B,wBAA4B;AAC5B,kCAAoC;AACpC,oBAA8B;AAC9B,qBAA6B;AAC7B,mBAAyB;AAElB,MAAM,WAAW,CAAC,eAAuB,UAAkB,yBAAuC;AARzG;AASI,QAAM,EAAE,MAAM,QAAI,uBAAS;AAC3B,QAAM,OAAO;AAEb,MAAI,YAAY,YAAY,GAAG;AAC3B,QAAI,YAAY;AAEhB,eAAW,WAAW,8BAAY,OAAO;AACrC,YAAI,mCAAY,MAAM,OAAyC,MAA3D,mBAA8D,SAAQ,QAAQ,KAAC,6BAAc,IAAI,GAAG;AACpG,oBAAY;AAEZ;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,CAAC,WAAW;AACZ,oCAAY,YAAY;AAExB,oCAAY,8BAAY,YAAY,UAAU,EAAE,MAAM,CAAC,MAAW;AAC9D,yCAAa,EAAE,MAAM,qBAAqB,OAAO,GAAG,MAAM,CAAC;AAAA,MAC/D,CAAC;AAED,YAAM,QAAQ,QAAQ,8BAAY,YAAY,UAAU;AAExD,UAAI,8BAAY,YAAY,MAAM,KAAmD,MAAM,QAAW;AAClG,sCAAY,YAAY,MAAM,KAAmD,IAAI;AAErF,sCAAY,MAAM,KAAuC,IAAI,CAAC;AAAA,MAClE;AAEA,yCAAW,UAAU,MAAM,oBAAoB,EAAE,MAAM,CAAC,MAAW;AAC/D,yCAAa,EAAE,MAAM,qBAAqB,OAAO,GAAG,MAAM,CAAC;AAAA,MAC/D,CAAC;AAED,2DAAoB;AAAA,IACxB;AAAA,EACJ;AACJ;",
  "names": []
}
