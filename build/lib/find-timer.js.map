{
  "version": 3,
  "sources": ["../../src/lib/find-timer.ts"],
  "sourcesContent": ["import { useStore } from \"../store/store\";\nimport { timerObject } from \"./timer-data\";\nimport { isIobrokerValue, isString } from \"./global\";\n\nexport const findTimer = async (\n\tsec: number,\n\tname: string,\n\tdeleteTimerIndex: number,\n\tvalue: string,\n): Promise<{ oneOfMultiTimer: any[]; timer: string[] }> => {\n\tconst store = useStore();\n\tconst _this = store._this;\n\ttry {\n\t\tif (name) {\n\t\t\tname = name.trim();\n\t\t}\n\t\t//TODO: Refactor\n\t\tlet inputDevice = \"\";\n\n\t\tconst obj = await _this.getForeignStateAsync(`alexa2.${store.getAlexaInstanceObject().instance}.History.name`);\n\n\t\tif (isIobrokerValue(obj) && isString(obj.val)) {\n\t\t\tinputDevice = obj.val;\n\t\t}\n\n\t\tlet countMatchingTime = 0;\n\t\tlet countMatchingName = 0;\n\t\tlet countMatchingInputDevice = 0;\n\n\t\tfor (const element in timerObject.timer) {\n\t\t\tif (timerObject.timer[element as keyof typeof timerObject.timer].voiceInputAsSeconds == sec) {\n\t\t\t\tcountMatchingTime++;\n\t\t\t}\n\n\t\t\tif (timerObject.timer[element as keyof typeof timerObject.timer].name.trim() == name) {\n\t\t\t\tcountMatchingName++;\n\t\t\t}\n\n\t\t\tif (timerObject.timer[element as keyof typeof timerObject.timer].inputDevice == inputDevice) {\n\t\t\t\tcountMatchingInputDevice++;\n\t\t\t}\n\t\t}\n\n\t\tconst timerFound: { oneOfMultiTimer: any[]; timer: any[] } = { oneOfMultiTimer: [], timer: [] };\n\n\t\tif (store.questionAlexa) {\n\t\t\tif (countMatchingName == 1) {\n\t\t\t\tconst value = \"\";\n\t\t\t\tconst sec = 0;\n\n\t\t\t\ttimerFound.oneOfMultiTimer = [value, sec, name, inputDevice];\n\t\t\t}\n\n\t\t\t// Einer, mit genauer Zeit, mehrmals vorhanden\n\t\t\telse if (countMatchingTime > 1) {\n\t\t\t\tconst name = \"\";\n\t\t\t\tconst inputDevice = \"\";\n\n\t\t\t\ttimerFound.oneOfMultiTimer = [value, sec, name, inputDevice];\n\t\t\t}\n\t\t\t// Einer, mit genauer Zeit, mehrmals auf verschiedenen Ger\u00E4ten\n\t\t\telse if (countMatchingInputDevice != timerObject.timerActive.timerCount) {\n\t\t\t\tconst name = \"\";\n\t\t\t\tconst inputDevice = \"\";\n\n\t\t\t\ttimerFound.oneOfMultiTimer = [value, sec, name, inputDevice];\n\t\t\t} else {\n\t\t\t\tconst sec = 0;\n\t\t\t\tconst name = \"\";\n\t\t\t\tconst inputDevice = \"\";\n\n\t\t\t\ttimerFound.oneOfMultiTimer = [value, sec, name, inputDevice];\n\t\t\t}\n\t\t}\n\n\t\tfor (const element in timerObject.timer) {\n\t\t\t// Soll einer oder mehrere Timer gel\u00F6scht werden?\n\t\t\tif (deleteTimerIndex == 1) {\n\t\t\t\t// Einer, mit genauer Zeit, nur einmal vorhanden\n\t\t\t\t// Einer, und einer ist auch nur gestellt\n\t\t\t\tif (!store.questionAlexa) {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttimerObject.timerActive.timerCount == 1 &&\n\t\t\t\t\t\ttimerObject.timerActive.timer[element as keyof typeof timerObject.timer] === true\n\t\t\t\t\t) {\n\t\t\t\t\t\ttimerFound.timer.push(element);\n\t\t\t\t\t\t_this.log.debug(\"Einer, wenn genau einer gestellt ist\");\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tcountMatchingTime == 1 &&\n\t\t\t\t\t\ttimerObject.timer[element as keyof typeof timerObject.timer][\"voiceInputAsSeconds\"] == sec &&\n\t\t\t\t\t\tsec !== 0\n\t\t\t\t\t) {\n\t\t\t\t\t\ttimerFound.timer.push(element);\n\n\t\t\t\t\t\t_this.log.debug(\"Wenn nur einer gestellt ist mit der der gew\u00FCnschten Zeit\");\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tcountMatchingTime == 1 &&\n\t\t\t\t\t\ttimerObject.timer[element as keyof typeof timerObject.timer][\"voiceInputAsSeconds\"] == sec\n\t\t\t\t\t) {\n\t\t\t\t\t\ttimerFound.timer.push(element);\n\t\t\t\t\t\t_this.log.debug(\"Einer ist gestellt mit genau diesem Wert\");\n\t\t\t\t\t}\n\t\t\t\t\t// Einer, mit genauem Namen\n\t\t\t\t\telse if (\n\t\t\t\t\t\ttimerObject.timer[element as keyof typeof timerObject.timer][\"name\"] == name &&\n\t\t\t\t\t\tname !== \"\" &&\n\t\t\t\t\t\tcountMatchingName == 1\n\t\t\t\t\t) {\n\t\t\t\t\t\ttimerFound.timer.push(element);\n\n\t\t\t\t\t\t_this.log.debug(\"Mit genauem Namen\");\n\t\t\t\t\t} // Entweder alle auf diesem Ger\u00E4t, oder keins auf diesem Ger\u00E4t\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t} else if (deleteTimerIndex == 2) {\n\t\t\t\t// Alle, alle sind auf einem Ger\u00E4t\n\t\t\t\tif (!store.questionAlexa) {\n\t\t\t\t\ttimerFound.timer.push(element);\n\t\t\t\t\t// }\n\t\t\t\t} else {\n\t\t\t\t\t// Alle, nur die vom eingabe Ger\u00E4t\n\t\t\t\t\tif (countMatchingInputDevice != timerObject.timerActive.timerCount && value.indexOf(\"nein\") != -1) {\n\t\t\t\t\t\tif (timerObject.timer[element as keyof typeof timerObject.timer].inputDevice == inputDevice) {\n\t\t\t\t\t\t\ttimerFound.timer.push(element);\n\t\t\t\t\t\t\t_this.log.debug(\"Nur auf diesem Ger\u00E4t l\u00F6schen\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Alle, von allen Ger\u00E4ten\n\t\t\t\t\telse if (\n\t\t\t\t\t\tcountMatchingInputDevice != timerObject.timerActive.timerCount &&\n\t\t\t\t\t\tvalue.indexOf(\"ja\") != -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tfor (const element in timerObject.timerActive.timer) {\n\t\t\t\t\t\t\ttimerFound.timer.push(element);\n\n\t\t\t\t\t\t\t_this.log.debug(\"Alles l\u00F6schen\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn timerFound;\n\t} catch (e) {\n\t\t_this.log.error(\"Error in findTimer: \" + e);\n\n\t\treturn { oneOfMultiTimer: [], timer: [] };\n\t}\n};\n"],
  "mappings": "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",
  "names": ["value", "sec", "name", "inputDevice", "element"]
}
