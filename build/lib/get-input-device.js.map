{
  "version": 3,
  "sources": ["../../src/lib/get-input-device.ts"],
  "sourcesContent": ["import { useStore } from '../store/store';\nimport { isIobrokerValue } from './global';\nimport type { Timer } from './timer-data';\nimport { errorLogging } from './logging';\n\nexport const getInputDevice = async (path: Timer): Promise<void> => {\n    const store = useStore();\n    const _this = store._this;\n    try {\n        const instance = store.getAlexaInstanceObject().instance;\n\n        const nameStateObj = await _this.getForeignStateAsync(`alexa2.${instance}.History.name`);\n        const serialStateObj = await _this.getForeignStateAsync(`alexa2.${instance}.History.serialNumber`);\n\n        if (isIobrokerValue(nameStateObj)) {\n            path.inputDevice = nameStateObj.val as string;\n            store.deviceName = nameStateObj?.val as string;\n        }\n\n        if (isIobrokerValue(serialStateObj)) {\n            path.serialNumber = serialStateObj.val as string;\n            store.deviceSerialNumber = serialStateObj?.val as string;\n        }\n    } catch (error) {\n        errorLogging({ text: 'Error in getInputDevice', error, _this });\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,oBAAgC;AAEhC,qBAA6B;AAEtB,MAAM,iBAAiB,OAAO,SAA+B;AAChE,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AACpB,MAAI;AACA,UAAM,WAAW,MAAM,uBAAuB,EAAE;AAEhD,UAAM,eAAe,MAAM,MAAM,qBAAqB,UAAU,QAAQ,eAAe;AACvF,UAAM,iBAAiB,MAAM,MAAM,qBAAqB,UAAU,QAAQ,uBAAuB;AAEjG,YAAI,+BAAgB,YAAY,GAAG;AAC/B,WAAK,cAAc,aAAa;AAChC,YAAM,aAAa,6CAAc;AAAA,IACrC;AAEA,YAAI,+BAAgB,cAAc,GAAG;AACjC,WAAK,eAAe,eAAe;AACnC,YAAM,qBAAqB,iDAAgB;AAAA,IAC/C;AAAA,EACJ,SAAS,OAAO;AACZ,qCAAa,EAAE,MAAM,2BAA2B,OAAO,MAAM,CAAC;AAAA,EAClE;AACJ;",
  "names": []
}
