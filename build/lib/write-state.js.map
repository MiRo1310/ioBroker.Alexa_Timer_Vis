{
  "version": 3,
  "sources": ["../../src/lib/write-state.ts"],
  "sourcesContent": ["import { Timer, TimerSelector, timerObject } from \"./timer-data\";\r\nimport { firstLetterToUpperCase } from \"./global\";\r\nimport { resetValues } from \"./reset\";\r\nimport { useStore } from \"../store/store\";\r\n\r\nexport function writeState(unload: boolean): void {\r\n\tconst store = useStore();\r\n\tconst _this = store._this;\r\n\tconst timers = timerObject.timerActive.timer;\r\n\ttry {\r\n\t\tfor (const element in timers) {\r\n\t\t\tconst timer = timerObject.timer[element as keyof typeof timerObject.timer];\r\n\r\n\t\t\tif (!timer) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet alive = true;\r\n\t\t\tif (unload) {\r\n\t\t\t\tresetValues(timer, element as TimerSelector);\r\n\t\t\t\talive = false;\r\n\t\t\t}\r\n\t\t\t_this.setStateChanged(\r\n\t\t\t\telement + \".alive\",\r\n\t\t\t\ttimerObject.timerActive.timer[element as keyof typeof timerObject.timer],\r\n\t\t\t\ttrue,\r\n\t\t\t);\r\n\t\t\t_this.setStateChanged(element + \".hour\", timer.hour, true);\r\n\t\t\t_this.setStateChanged(element + \".minute\", timer.minute, true);\r\n\t\t\t_this.setStateChanged(element + \".second\", timer.second, true);\r\n\t\t\t_this.setStateChanged(element + \".string\", timer.string_Timer, true);\r\n\t\t\t_this.setStateChanged(element + \".string_2\", timer.string_2_Timer, true);\r\n\t\t\t_this.setStateChanged(element + \".TimeStart\", timer.start_Time, true);\r\n\t\t\t_this.setStateChanged(element + \".TimeEnd\", timer.end_Time, true);\r\n\t\t\t_this.setStateChanged(element + \".InputDeviceName\", timer.inputDevice, true);\r\n\t\t\t_this.setStateChanged(element + \".lengthTimer\", timer.lengthTimer, true);\r\n\t\t\t_this.setStateChanged(element + \".percent2\", timer.percent2, true);\r\n\t\t\t_this.setStateChanged(element + \".percent\", timer.percent, true);\r\n\t\t\t_this.setStateChanged(element + \".name\", getTimerName(timer), true);\r\n\t\t\t_this.setStateChanged(\"all_Timer.alive\", alive, true);\r\n\t\t}\r\n\t} catch (e: any) {\r\n\t\t_this.log.error(\"Error in writeState: \" + JSON.stringify(e));\r\n\t\t_this.log.error(e.stack);\r\n\t}\r\n}\r\n\r\nfunction getTimerName(timer: Timer): string {\r\n\tif (timer.nameFromAlexa) {\r\n\t\treturn firstLetterToUpperCase(timer.nameFromAlexa + \" Timer\");\r\n\t}\r\n\r\n\tif (timer.name && timer.name !== \"Timer\") {\r\n\t\treturn firstLetterToUpperCase(timer.name) + \" Timer\";\r\n\t}\r\n\r\n\treturn \"Timer\";\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkD;AAClD,oBAAuC;AACvC,mBAA4B;AAC5B,mBAAyB;AAElB,SAAS,WAAW,QAAuB;AACjD,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AACpB,QAAM,SAAS,8BAAY,YAAY;AACvC,MAAI;AACH,eAAW,WAAW,QAAQ;AAC7B,YAAM,QAAQ,8BAAY,MAAM,OAAyC;AAEzE,UAAI,CAAC,OAAO;AACX;AAAA,MACD;AAEA,UAAI,QAAQ;AACZ,UAAI,QAAQ;AACX,sCAAY,OAAO,OAAwB;AAC3C,gBAAQ;AAAA,MACT;AACA,YAAM;AAAA,QACL,UAAU;AAAA,QACV,8BAAY,YAAY,MAAM,OAAyC;AAAA,QACvE;AAAA,MACD;AACA,YAAM,gBAAgB,UAAU,SAAS,MAAM,MAAM,IAAI;AACzD,YAAM,gBAAgB,UAAU,WAAW,MAAM,QAAQ,IAAI;AAC7D,YAAM,gBAAgB,UAAU,WAAW,MAAM,QAAQ,IAAI;AAC7D,YAAM,gBAAgB,UAAU,WAAW,MAAM,cAAc,IAAI;AACnE,YAAM,gBAAgB,UAAU,aAAa,MAAM,gBAAgB,IAAI;AACvE,YAAM,gBAAgB,UAAU,cAAc,MAAM,YAAY,IAAI;AACpE,YAAM,gBAAgB,UAAU,YAAY,MAAM,UAAU,IAAI;AAChE,YAAM,gBAAgB,UAAU,oBAAoB,MAAM,aAAa,IAAI;AAC3E,YAAM,gBAAgB,UAAU,gBAAgB,MAAM,aAAa,IAAI;AACvE,YAAM,gBAAgB,UAAU,aAAa,MAAM,UAAU,IAAI;AACjE,YAAM,gBAAgB,UAAU,YAAY,MAAM,SAAS,IAAI;AAC/D,YAAM,gBAAgB,UAAU,SAAS,aAAa,KAAK,GAAG,IAAI;AAClE,YAAM,gBAAgB,mBAAmB,OAAO,IAAI;AAAA,IACrD;AAAA,EACD,SAAS,GAAQ;AAChB,UAAM,IAAI,MAAM,0BAA0B,KAAK,UAAU,CAAC,CAAC;AAC3D,UAAM,IAAI,MAAM,EAAE,KAAK;AAAA,EACxB;AACD;AAEA,SAAS,aAAa,OAAsB;AAC3C,MAAI,MAAM,eAAe;AACxB,eAAO,sCAAuB,MAAM,gBAAgB,QAAQ;AAAA,EAC7D;AAEA,MAAI,MAAM,QAAQ,MAAM,SAAS,SAAS;AACzC,eAAO,sCAAuB,MAAM,IAAI,IAAI;AAAA,EAC7C;AAEA,SAAO;AACR;",
  "names": []
}
