{
  "version": 3,
  "sources": ["../../src/lib/write-state.ts"],
  "sourcesContent": ["import { Timer, TimerSelector, timerObject } from \"./timer-data\";\nimport { firstLetterToUpperCase } from \"./global\";\nimport { resetValues } from \"./reset\";\nimport { useStore } from \"../store/store\";\nimport { deepCopy } from \"./object\";\nimport { errorLogging } from \"./logging\";\n\nexport function writeState({ reset }: { reset: boolean }): void {\n\tconst store = useStore();\n\tconst _this = store._this;\n\tconst timers = timerObject.timerActive.timer;\n\ttry {\n\t\tfor (const element in timers) {\n\t\t\tconst timer = timerObject.timer[element as keyof typeof timerObject.timer];\n\n\t\t\tif (!timer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet alive = true;\n\t\t\tif (reset) {\n\t\t\t\tresetValues(timer, element as TimerSelector);\n\t\t\t\talive = false;\n\t\t\t}\n\n\t\t\t_this.setStateChanged(\n\t\t\t\telement + \".alive\",\n\t\t\t\ttimerObject.timerActive.timer[element as keyof typeof timerObject.timer],\n\t\t\t\ttrue,\n\t\t\t);\n\n\t\t\t_this.setStateChanged(element + \".hour\", timer.hour, true);\n\t\t\t_this.setStateChanged(element + \".minute\", timer.minute, true);\n\t\t\t_this.setStateChanged(element + \".second\", timer.second, true);\n\t\t\t_this.setStateChanged(element + \".string\", timer.stringTimer, true);\n\t\t\t_this.setStateChanged(element + \".string_2\", timer.stringTimer2, true);\n\t\t\t_this.setStateChanged(element + \".TimeStart\", timer.startTimeString, true);\n\t\t\t_this.setStateChanged(element + \".TimeEnd\", timer.endTimeString, true);\n\t\t\t_this.setStateChanged(element + \".InputDeviceName\", timer.inputDevice, true);\n\t\t\t_this.setStateChanged(element + \".lengthTimer\", timer.lengthTimer, true);\n\t\t\t_this.setStateChanged(element + \".percent2\", timer.percent2, true);\n\t\t\t_this.setStateChanged(element + \".percent\", timer.percent, true);\n\t\t\t_this.setStateChanged(element + \".name\", getTimerName(timer), true);\n\t\t\t_this.setStateChanged(element + \".json\", getJson(timer), true);\n\t\t\t_this.setStateChanged(\"all_Timer.alive\", alive, true);\n\t\t}\n\t} catch (e: any) {\n\t\terrorLogging(\"Error in writeState\", e, _this);\n\t}\n\n\tfunction getJson(timer: Timer): ioBroker.State | ioBroker.StateValue | ioBroker.SettableState {\n\t\tconst copy = deepCopy(timer);\n\t\tdelete (copy as any).extendOrShortenTimer;\n\t\treturn JSON.stringify(copy);\n\t}\n}\n\nfunction getTimerName(timer: Timer): string {\n\tif (timer.alexaTimerName) {\n\t\treturn firstLetterToUpperCase(timer.alexaTimerName + \" Timer\");\n\t}\n\n\tif (timer.name !== \"Timer\") {\n\t\treturn firstLetterToUpperCase(timer.name) + \" Timer\";\n\t}\n\n\treturn \"Timer\";\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkD;AAClD,oBAAuC;AACvC,mBAA4B;AAC5B,mBAAyB;AACzB,oBAAyB;AACzB,qBAA6B;AAEtB,SAAS,WAAW,EAAE,MAAM,GAA6B;AAC/D,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AACpB,QAAM,SAAS,8BAAY,YAAY;AACvC,MAAI;AACH,eAAW,WAAW,QAAQ;AAC7B,YAAM,QAAQ,8BAAY,MAAM,OAAyC;AAEzE,UAAI,CAAC,OAAO;AACX;AAAA,MACD;AAEA,UAAI,QAAQ;AACZ,UAAI,OAAO;AACV,sCAAY,OAAO,OAAwB;AAC3C,gBAAQ;AAAA,MACT;AAEA,YAAM;AAAA,QACL,UAAU;AAAA,QACV,8BAAY,YAAY,MAAM,OAAyC;AAAA,QACvE;AAAA,MACD;AAEA,YAAM,gBAAgB,UAAU,SAAS,MAAM,MAAM,IAAI;AACzD,YAAM,gBAAgB,UAAU,WAAW,MAAM,QAAQ,IAAI;AAC7D,YAAM,gBAAgB,UAAU,WAAW,MAAM,QAAQ,IAAI;AAC7D,YAAM,gBAAgB,UAAU,WAAW,MAAM,aAAa,IAAI;AAClE,YAAM,gBAAgB,UAAU,aAAa,MAAM,cAAc,IAAI;AACrE,YAAM,gBAAgB,UAAU,cAAc,MAAM,iBAAiB,IAAI;AACzE,YAAM,gBAAgB,UAAU,YAAY,MAAM,eAAe,IAAI;AACrE,YAAM,gBAAgB,UAAU,oBAAoB,MAAM,aAAa,IAAI;AAC3E,YAAM,gBAAgB,UAAU,gBAAgB,MAAM,aAAa,IAAI;AACvE,YAAM,gBAAgB,UAAU,aAAa,MAAM,UAAU,IAAI;AACjE,YAAM,gBAAgB,UAAU,YAAY,MAAM,SAAS,IAAI;AAC/D,YAAM,gBAAgB,UAAU,SAAS,aAAa,KAAK,GAAG,IAAI;AAClE,YAAM,gBAAgB,UAAU,SAAS,QAAQ,KAAK,GAAG,IAAI;AAC7D,YAAM,gBAAgB,mBAAmB,OAAO,IAAI;AAAA,IACrD;AAAA,EACD,SAAS,GAAQ;AAChB,qCAAa,uBAAuB,GAAG,KAAK;AAAA,EAC7C;AAEA,WAAS,QAAQ,OAA6E;AAC7F,UAAM,WAAO,wBAAS,KAAK;AAC3B,WAAQ,KAAa;AACrB,WAAO,KAAK,UAAU,IAAI;AAAA,EAC3B;AACD;AAEA,SAAS,aAAa,OAAsB;AAC3C,MAAI,MAAM,gBAAgB;AACzB,eAAO,sCAAuB,MAAM,iBAAiB,QAAQ;AAAA,EAC9D;AAEA,MAAI,MAAM,SAAS,SAAS;AAC3B,eAAO,sCAAuB,MAAM,IAAI,IAAI;AAAA,EAC7C;AAEA,SAAO;AACR;",
  "names": []
}
