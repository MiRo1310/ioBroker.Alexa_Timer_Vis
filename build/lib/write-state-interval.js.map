{
  "version": 3,
  "sources": ["../../src/lib/write-state-interval.ts"],
  "sourcesContent": ["import { useStore } from '../store/store';\nimport { errorLogging } from './logging';\nimport { timerObject } from './timer-data';\nimport { writeState } from './write-state';\n\nexport const writeStateIntervall = (): void => {\n    const store = useStore();\n    const { _this } = store;\n    try {\n        if (store.interval) {\n            return;\n        }\n        store.interval = _this.setInterval((): void => {\n            writeState({ reset: false }).catch((e: any) => {\n                errorLogging({ text: 'Error in writeStateIntervall', error: e, _this });\n            });\n\n            if (timerObject.timerActive.timerCount === 0) {\n                _this.setStateChanged('all_Timer.alive', false, true);\n                _this.clearInterval(store.interval);\n                store.interval = null;\n                _this.log.debug('Intervall stopped!');\n            }\n        }, timerObject.timerActive.data.interval);\n    } catch (e: any) {\n        errorLogging({ text: 'Error in writeStateIntervall', error: e, _this });\n        _this.clearInterval(store.interval);\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,qBAA6B;AAC7B,wBAA4B;AAC5B,yBAA2B;AAEpB,MAAM,sBAAsB,MAAY;AAC3C,QAAM,YAAQ,uBAAS;AACvB,QAAM,EAAE,MAAM,IAAI;AAClB,MAAI;AACA,QAAI,MAAM,UAAU;AAChB;AAAA,IACJ;AACA,UAAM,WAAW,MAAM,YAAY,MAAY;AAC3C,yCAAW,EAAE,OAAO,MAAM,CAAC,EAAE,MAAM,CAAC,MAAW;AAC3C,yCAAa,EAAE,MAAM,gCAAgC,OAAO,GAAG,MAAM,CAAC;AAAA,MAC1E,CAAC;AAED,UAAI,8BAAY,YAAY,eAAe,GAAG;AAC1C,cAAM,gBAAgB,mBAAmB,OAAO,IAAI;AACpD,cAAM,cAAc,MAAM,QAAQ;AAClC,cAAM,WAAW;AACjB,cAAM,IAAI,MAAM,oBAAoB;AAAA,MACxC;AAAA,IACJ,GAAG,8BAAY,YAAY,KAAK,QAAQ;AAAA,EAC5C,SAAS,GAAQ;AACb,qCAAa,EAAE,MAAM,gCAAgC,OAAO,GAAG,MAAM,CAAC;AACtE,UAAM,cAAc,MAAM,QAAQ;AAAA,EACtC;AACJ;",
  "names": []
}
