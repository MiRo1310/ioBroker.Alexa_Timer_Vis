{
  "version": 3,
  "sources": ["../../src/lib/write-state-interval.ts"],
  "sourcesContent": ["import { timerObject } from \"./timer-data\";\nimport { writeState } from \"./write-state\";\nimport { useStore } from \"../store/store\";\nimport { errorLogging } from \"./logging\";\n\nlet writeStateActive = false;\nexport const writeStateIntervall = (): void => {\n\tconst store = useStore();\n\tconst _this = store._this;\n\ttry {\n\t\tif (!writeStateActive) {\n\t\t\twriteStateActive = true;\n\n\t\t\tstore.interval = _this.setInterval(() => {\n\t\t\t\twriteState(false);\n\n\t\t\t\tif (timerObject.timerActive.timerCount == 0) {\n\t\t\t\t\twriteStateActive = false;\n\n\t\t\t\t\t_this.setState(\"all_Timer.alive\", false, true);\n\t\t\t\t\t_this.log.debug(\"Intervall stopped!\");\n\t\t\t\t\t_this.clearInterval(store.interval);\n\t\t\t\t}\n\t\t\t}, timerObject.timerActive.data.interval);\n\t\t}\n\t} catch (e: any) {\n\t\terrorLogging(\"Error in writeStateIntervall\", e, _this);\n\t\t_this.clearInterval(store.interval);\n\t}\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4B;AAC5B,yBAA2B;AAC3B,mBAAyB;AACzB,qBAA6B;AAE7B,IAAI,mBAAmB;AAChB,MAAM,sBAAsB,MAAY;AAC9C,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AACpB,MAAI;AACH,QAAI,CAAC,kBAAkB;AACtB,yBAAmB;AAEnB,YAAM,WAAW,MAAM,YAAY,MAAM;AACxC,2CAAW,KAAK;AAEhB,YAAI,8BAAY,YAAY,cAAc,GAAG;AAC5C,6BAAmB;AAEnB,gBAAM,SAAS,mBAAmB,OAAO,IAAI;AAC7C,gBAAM,IAAI,MAAM,oBAAoB;AACpC,gBAAM,cAAc,MAAM,QAAQ;AAAA,QACnC;AAAA,MACD,GAAG,8BAAY,YAAY,KAAK,QAAQ;AAAA,IACzC;AAAA,EACD,SAAS,GAAQ;AAChB,qCAAa,gCAAgC,GAAG,KAAK;AACrD,UAAM,cAAc,MAAM,QAAQ;AAAA,EACnC;AACD;",
  "names": []
}
