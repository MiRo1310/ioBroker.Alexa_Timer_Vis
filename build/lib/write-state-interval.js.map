{
  "version": 3,
  "sources": ["../../src/lib/write-state-interval.ts"],
  "sourcesContent": ["import { useStore } from \"../store/store\";\nimport { errorLogging } from \"./logging\";\nimport { timerObject } from \"./timer-data\";\nimport { writeState } from \"./write-state\";\n\nexport const writeStateIntervall = (): void => {\n\tconst store = useStore();\n\tconst { _this } = store;\n\ttry {\n\t\tif (store.interval) {\n\t\t\treturn;\n\t\t}\n\t\tstore.interval = _this.setInterval(async () => {\n\t\t\twriteState({ reset: false });\n\n\t\t\tif (timerObject.timerActive.timerCount === 0) {\n\t\t\t\t_this.setStateChanged(\"all_Timer.alive\", false, true);\n\t\t\t\t_this.clearInterval(store.interval);\n\t\t\t\tstore.interval = null;\n\t\t\t\t_this.log.debug(\"Intervall stopped!\");\n\t\t\t}\n\t\t}, timerObject.timerActive.data.interval);\n\t} catch (e: any) {\n\t\terrorLogging(\"Error in writeStateIntervall\", e, _this);\n\t\t_this.clearInterval(store.interval);\n\t}\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,qBAA6B;AAC7B,wBAA4B;AAC5B,yBAA2B;AAEpB,MAAM,sBAAsB,MAAY;AAC9C,QAAM,YAAQ,uBAAS;AACvB,QAAM,EAAE,MAAM,IAAI;AAClB,MAAI;AACH,QAAI,MAAM,UAAU;AACnB;AAAA,IACD;AACA,UAAM,WAAW,MAAM,YAAY,YAAY;AAC9C,yCAAW,EAAE,OAAO,MAAM,CAAC;AAE3B,UAAI,8BAAY,YAAY,eAAe,GAAG;AAC7C,cAAM,gBAAgB,mBAAmB,OAAO,IAAI;AACpD,cAAM,cAAc,MAAM,QAAQ;AAClC,cAAM,WAAW;AACjB,cAAM,IAAI,MAAM,oBAAoB;AAAA,MACrC;AAAA,IACD,GAAG,8BAAY,YAAY,KAAK,QAAQ;AAAA,EACzC,SAAS,GAAQ;AAChB,qCAAa,gCAAgC,GAAG,KAAK;AACrD,UAAM,cAAc,MAAM,QAAQ;AAAA,EACnC;AACD;",
  "names": []
}
