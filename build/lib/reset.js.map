{
  "version": 3,
  "sources": ["../../src/lib/reset.ts"],
  "sourcesContent": ["import AlexaTimerVis from \"../main\";\nimport { useStore } from \"../store/store\";\nimport { Timer, TimerSelector, timerObject } from \"./timer-data\";\nimport { writeState } from \"./write-state\";\n\nexport const resetValues = (timer: Timer, index: TimerSelector): void => {\n\tconst store = useStore();\n\tconst _this = store._this;\n\ttry {\n\t\ttimerObject.timerActive.timer[index as keyof typeof timerObject.timerActive.timer] = false; // Timer auf false setzen falls Zeit abgelaufen ist, ansonsten steht er schon auf false\n\t\ttimer.hour = store.valHourForZero || \"\";\n\t\ttimer.minute = store.valMinuteForZero || \"\";\n\t\ttimer.second = store.valSecondForZero || \"\";\n\t\ttimer.stringTimer = \"00:00:00 h\";\n\t\ttimer.stringTimer2 = \"\";\n\t\ttimer.voiceInputAsSeconds = 0;\n\t\ttimer.remainingTimeInSeconds = 0;\n\t\ttimer.index = 0;\n\t\ttimer.name = \"Timer\";\n\t\ttimer.alexaTimerName = \"\";\n\t\ttimer.startTimeString = \"00:00:00\";\n\t\ttimer.endTimeString = \"00:00:00\";\n\t\ttimer.inputDevice = \"\";\n\t\ttimer.timerInterval = 0;\n\t\ttimer.lengthTimer = \"\";\n\t\ttimer.percent = 0;\n\t\ttimer.percent2 = 0;\n\t\ttimer.extendOrShortenTimer = false;\n\t\ttimer.id = \"\";\n\n\t\t_this.setObjectAsync(\"alexa-timer-vis.0.\" + index, {\n\t\t\ttype: \"device\",\n\t\t\tcommon: { name: `` },\n\t\t\tnative: {},\n\t\t});\n\t} catch (e: any) {\n\t\t_this.log.error(\"Error in resetValues: \" + JSON.stringify(e));\n\t\t_this.log.error(JSON.stringify(e.stack));\n\t}\n};\n\nexport function resetAllTimerValuesAndState(_this: AlexaTimerVis): void {\n\tObject.keys(timerObject.timer).forEach((el) => {\n\t\tresetValues(timerObject.timer[el as keyof typeof timerObject.timer], el as TimerSelector);\n\t\twriteState(false);\n\t});\n\t_this.setStateChanged(\"all_Timer.alive\", false, true);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAyB;AACzB,wBAAkD;AAClD,yBAA2B;AAEpB,MAAM,cAAc,CAAC,OAAc,UAA+B;AACxE,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AACpB,MAAI;AACH,kCAAY,YAAY,MAAM,KAAmD,IAAI;AACrF,UAAM,OAAO,MAAM,kBAAkB;AACrC,UAAM,SAAS,MAAM,oBAAoB;AACzC,UAAM,SAAS,MAAM,oBAAoB;AACzC,UAAM,cAAc;AACpB,UAAM,eAAe;AACrB,UAAM,sBAAsB;AAC5B,UAAM,yBAAyB;AAC/B,UAAM,QAAQ;AACd,UAAM,OAAO;AACb,UAAM,iBAAiB;AACvB,UAAM,kBAAkB;AACxB,UAAM,gBAAgB;AACtB,UAAM,cAAc;AACpB,UAAM,gBAAgB;AACtB,UAAM,cAAc;AACpB,UAAM,UAAU;AAChB,UAAM,WAAW;AACjB,UAAM,uBAAuB;AAC7B,UAAM,KAAK;AAEX,UAAM,eAAe,uBAAuB,OAAO;AAAA,MAClD,MAAM;AAAA,MACN,QAAQ,EAAE,MAAM,GAAG;AAAA,MACnB,QAAQ,CAAC;AAAA,IACV,CAAC;AAAA,EACF,SAAS,GAAQ;AAChB,UAAM,IAAI,MAAM,2BAA2B,KAAK,UAAU,CAAC,CAAC;AAC5D,UAAM,IAAI,MAAM,KAAK,UAAU,EAAE,KAAK,CAAC;AAAA,EACxC;AACD;AAEO,SAAS,4BAA4B,OAA4B;AACvE,SAAO,KAAK,8BAAY,KAAK,EAAE,QAAQ,CAAC,OAAO;AAC9C,gBAAY,8BAAY,MAAM,EAAoC,GAAG,EAAmB;AACxF,uCAAW,KAAK;AAAA,EACjB,CAAC;AACD,QAAM,gBAAgB,mBAAmB,OAAO,IAAI;AACrD;",
  "names": []
}
