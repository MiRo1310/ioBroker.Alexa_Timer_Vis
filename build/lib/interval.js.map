{
  "version": 3,
  "sources": ["../../src/lib/interval.ts"],
  "sourcesContent": ["import { generateValues } from \"./generate-values\";\r\nimport { secToHourMinSec } from \"./global\";\r\nimport { resetValues } from \"./reset\";\r\nimport { Timer, TimerSelector, timerObject } from \"./timer-data\";\r\nimport { useStore } from \"../store/store\";\r\n\r\nexport const interval = (\r\n\tsec: number,\r\n\ttimerBlock: TimerSelector,\r\n\tinputString: string,\r\n\tname: string,\r\n\ttimer: Timer,\r\n\tint: number,\r\n\tonlyOneTimer: boolean,\r\n): void => {\r\n\tconst store = useStore();\r\n\tconst _this = store._this;\r\n\r\n\tgenerateValues(timer, sec, timerBlock, inputString, name);\r\n\r\n\tconst { string } = secToHourMinSec(sec, false);\r\n\ttimer.lengthTimer = string;\r\n\r\n\tif (!timerBlock) {\r\n\t\treturn;\r\n\t}\r\n\r\n\ttimerObject.interval[timerBlock as keyof typeof timerObject.interval] = _this.setInterval(() => {\r\n\t\tconst timeLeftSec = generateValues(timer, sec, timerBlock, inputString, name);\r\n\r\n\t\tif (timeLeftSec <= 60 && onlyOneTimer == false) {\r\n\t\t\tonlyOneTimer = true;\r\n\r\n\t\t\tif (timerObject.interval) {\r\n\t\t\t\t_this.clearInterval(\r\n\t\t\t\t\ttimerObject.interval[timerBlock as keyof typeof timerObject.interval] as ioBroker.Interval,\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tinterval(\r\n\t\t\t\tsec,\r\n\t\t\t\ttimerBlock,\r\n\t\t\t\tinputString,\r\n\t\t\t\tname,\r\n\t\t\t\ttimer,\r\n\t\t\t\ttimerObject.timer[timerBlock as keyof typeof timerObject.timer].timerInterval,\r\n\t\t\t\ttrue,\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (timeLeftSec <= 0 || timerObject.timerActive.timer[timerBlock as keyof typeof timerObject.timer] == false) {\r\n\t\t\ttimerObject.timerActive.timerCount--;\r\n\r\n\t\t\tresetValues(timer, timerBlock);\r\n\r\n\t\t\t_this.log.debug(\"Timer stopped\");\r\n\r\n\t\t\tif (timerObject.interval) {\r\n\t\t\t\t_this.clearInterval(\r\n\t\t\t\t\ttimerObject.interval[timerBlock as keyof typeof timerObject.interval] as ioBroker.Interval,\r\n\t\t\t\t);\r\n\r\n\t\t\t\ttimerObject.interval[timerBlock as keyof typeof timerObject.interval] = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}, int);\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA+B;AAC/B,oBAAgC;AAChC,mBAA4B;AAC5B,wBAAkD;AAClD,mBAAyB;AAElB,MAAM,WAAW,CACvB,KACA,YACA,aACA,MACA,OACA,KACA,iBACU;AACV,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AAEpB,6CAAe,OAAO,KAAK,YAAY,aAAa,IAAI;AAExD,QAAM,EAAE,OAAO,QAAI,+BAAgB,KAAK,KAAK;AAC7C,QAAM,cAAc;AAEpB,MAAI,CAAC,YAAY;AAChB;AAAA,EACD;AAEA,gCAAY,SAAS,UAA+C,IAAI,MAAM,YAAY,MAAM;AAC/F,UAAM,kBAAc,uCAAe,OAAO,KAAK,YAAY,aAAa,IAAI;AAE5E,QAAI,eAAe,MAAM,gBAAgB,OAAO;AAC/C,qBAAe;AAEf,UAAI,8BAAY,UAAU;AACzB,cAAM;AAAA,UACL,8BAAY,SAAS,UAA+C;AAAA,QACrE;AAAA,MACD;AAEA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,8BAAY,MAAM,UAA4C,EAAE;AAAA,QAChE;AAAA,MACD;AAAA,IACD;AAEA,QAAI,eAAe,KAAK,8BAAY,YAAY,MAAM,UAA4C,KAAK,OAAO;AAC7G,oCAAY,YAAY;AAExB,oCAAY,OAAO,UAAU;AAE7B,YAAM,IAAI,MAAM,eAAe;AAE/B,UAAI,8BAAY,UAAU;AACzB,cAAM;AAAA,UACL,8BAAY,SAAS,UAA+C;AAAA,QACrE;AAEA,sCAAY,SAAS,UAA+C,IAAI;AAAA,MACzE;AAAA,IACD;AAAA,EACD,GAAG,GAAG;AACP;",
  "names": []
}
