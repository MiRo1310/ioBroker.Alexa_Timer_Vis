{
  "version": 3,
  "sources": ["../../src/lib/get-todo.ts"],
  "sourcesContent": ["import { useStore } from \"../store/store\";\r\nimport { TimerCondition, timerObject } from \"./timer-data\";\r\n\r\nexport const getToDo = (value: string): void => {\r\n\tconst store = useStore();\r\n\r\n\tconst valueArray = value.split(\" \");\r\n\tconst arraysTodo = timerObject.timerActive.condition;\r\n\tlet foundValue: keyof TimerCondition | null = null;\r\n\tlet abortLoop = false;\r\n\r\n\tfor (const string in arraysTodo) {\r\n\t\tif (abortLoop) break;\r\n\r\n\t\tfor (const element of valueArray) {\r\n\t\t\tif (timerObject.timerActive.data.notNoted.includes(element)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (arraysTodo[string as keyof typeof arraysTodo].includes(element)) {\r\n\t\t\t\tfoundValue = string as keyof TimerCondition;\r\n\t\t\t\tabortLoop = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstore.timerAction = foundValue;\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,wBAA4C;AAErC,MAAM,UAAU,CAAC,UAAwB;AAC/C,QAAM,YAAQ,uBAAS;AAEvB,QAAM,aAAa,MAAM,MAAM,GAAG;AAClC,QAAM,aAAa,8BAAY,YAAY;AAC3C,MAAI,aAA0C;AAC9C,MAAI,YAAY;AAEhB,aAAW,UAAU,YAAY;AAChC,QAAI;AAAW;AAEf,eAAW,WAAW,YAAY;AACjC,UAAI,8BAAY,YAAY,KAAK,SAAS,SAAS,OAAO,GAAG;AAC5D;AAAA,MACD,WAAW,WAAW,MAAiC,EAAE,SAAS,OAAO,GAAG;AAC3E,qBAAa;AACb,oBAAY;AACZ;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAEA,QAAM,cAAc;AACrB;",
  "names": []
}
