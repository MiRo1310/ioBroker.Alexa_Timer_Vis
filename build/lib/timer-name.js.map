{
  "version": 3,
  "sources": ["../../src/lib/timer-name.ts"],
  "sourcesContent": ["import { useStore } from \"../store/store\";\r\nimport { isIobrokerValue } from \"./global\";\r\nimport { timerObject, TimerSelector } from \"./timer-data\";\r\n\r\nconst oldJson: AlexaActiveTimerList[] = [];\r\ninterface AlexaActiveTimerList {\r\n\tid: string;\r\n\tlabel: string | null;\r\n\ttriggerTime: number;\r\n}\r\n\r\nexport const getNewTimerName = (newJsonString: ioBroker.State, timerSelector: string): void => {\r\n\tconst { _this } = useStore();\r\n\r\n\tlet newJson: AlexaActiveTimerList[] = [];\r\n\ttry {\r\n\t\tif (isIobrokerValue(newJsonString)) {\r\n\t\t\tnewJson = JSON.parse(newJsonString.val as string);\r\n\t\t}\r\n\r\n\t\tif (!oldJson || (oldJson.length === 0 && newJson.length)) {\r\n\t\t\ttimerObject.timer[timerSelector as keyof typeof timerObject.timer].nameFromAlexa = newJson[0]?.label;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < newJson.length; i++) {\r\n\t\t\tconst elementExist = oldJson.find((oldElement: any) => {\r\n\t\t\t\tif (oldElement.id === newJson[i].id) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (!elementExist) {\r\n\t\t\t\ttimerObject.timer[timerSelector as keyof typeof timerObject.timer].nameFromAlexa = newJson[i].label;\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (e: any) {\r\n\t\t_this.log.error(\"Error in checkForNewTimerInObject: \" + JSON.stringify(e));\r\n\t\t_this.log.error(e.stack);\r\n\t}\r\n};\r\n\r\nexport const registerIdToGetTimerName = async (timerSelector: TimerSelector): Promise<void> => {\r\n\tconst store = useStore();\r\n\tconst _this = store._this;\r\n\ttry {\r\n\t\tconst serial = store.deviceSerialNumber;\r\n\t\tif (!serial) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst foreignId = `alexa2.${store.getAlexaInstanceObject().instance}.Echo-Devices.${serial}.Timer.activeTimerList`;\r\n\t\tstore.lastTimers.push({ timerSerial: serial, timerSelector: timerSelector as string, id: foreignId });\r\n\r\n\t\tawait _this.subscribeForeignStatesAsync(foreignId);\r\n\t} catch (e: any) {\r\n\t\t_this.log.error(\"Error in getName: \" + JSON.stringify(e));\r\n\t\t_this.log.error(e.stack);\r\n\t}\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,oBAAgC;AAChC,wBAA2C;AAE3C,MAAM,UAAkC,CAAC;AAOlC,MAAM,kBAAkB,CAAC,eAA+B,kBAAgC;AAX/F;AAYC,QAAM,EAAE,MAAM,QAAI,uBAAS;AAE3B,MAAI,UAAkC,CAAC;AACvC,MAAI;AACH,YAAI,+BAAgB,aAAa,GAAG;AACnC,gBAAU,KAAK,MAAM,cAAc,GAAa;AAAA,IACjD;AAEA,QAAI,CAAC,WAAY,QAAQ,WAAW,KAAK,QAAQ,QAAS;AACzD,oCAAY,MAAM,aAA+C,EAAE,iBAAgB,aAAQ,CAAC,MAAT,mBAAY;AAAA,IAChG;AAEA,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACxC,YAAM,eAAe,QAAQ,KAAK,CAAC,eAAoB;AACtD,YAAI,WAAW,OAAO,QAAQ,CAAC,EAAE,IAAI;AACpC,iBAAO;AAAA,QACR;AAAA,MACD,CAAC;AACD,UAAI,CAAC,cAAc;AAClB,sCAAY,MAAM,aAA+C,EAAE,gBAAgB,QAAQ,CAAC,EAAE;AAAA,MAC/F;AAAA,IACD;AAAA,EACD,SAAS,GAAQ;AAChB,UAAM,IAAI,MAAM,wCAAwC,KAAK,UAAU,CAAC,CAAC;AACzE,UAAM,IAAI,MAAM,EAAE,KAAK;AAAA,EACxB;AACD;AAEO,MAAM,2BAA2B,OAAO,kBAAgD;AAC9F,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AACpB,MAAI;AACH,UAAM,SAAS,MAAM;AACrB,QAAI,CAAC,QAAQ;AACZ;AAAA,IACD;AACA,UAAM,YAAY,UAAU,MAAM,uBAAuB,EAAE,QAAQ,iBAAiB,MAAM;AAC1F,UAAM,WAAW,KAAK,EAAE,aAAa,QAAQ,eAAwC,IAAI,UAAU,CAAC;AAEpG,UAAM,MAAM,4BAA4B,SAAS;AAAA,EAClD,SAAS,GAAQ;AAChB,UAAM,IAAI,MAAM,uBAAuB,KAAK,UAAU,CAAC,CAAC;AACxD,UAAM,IAAI,MAAM,EAAE,KAAK;AAAA,EACxB;AACD;",
  "names": []
}
