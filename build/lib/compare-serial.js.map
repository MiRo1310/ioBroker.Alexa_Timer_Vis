{
  "version": 3,
  "sources": ["../../src/lib/compare-serial.ts"],
  "sourcesContent": ["import { useStore } from \"../store/store\";\nimport { isIobrokerValue } from \"./global\";\nimport { errorLogging } from \"./logging\";\nlet oldCreationTime: ioBroker.StateValue | null;\nlet oldSerial: string;\n\nexport const compareCreationTimeAndSerial = async (): Promise<{ sameTime: boolean; sameSerial: boolean }> => {\n\tconst store = useStore();\n\tconst _this = store._this;\n\n\ttry {\n\t\tconst creationTime = await _this.getForeignStateAsync(\"alexa2.0.History.creationTime\");\n\t\tconst serial = await _this.getForeignStateAsync(\"alexa2.0.History.serialNumber\");\n\n\t\tlet isSameTime = false;\n\t\tlet isSameSerial = false;\n\n\t\tif (isIobrokerValue(creationTime)) {\n\t\t\tif (oldCreationTime == creationTime.val) {\n\t\t\t\tisSameTime = true;\n\t\t\t}\n\t\t\toldCreationTime = creationTime.val;\n\t\t}\n\t\tif (isIobrokerValue(serial)) {\n\t\t\tif (oldSerial == serial.val) {\n\t\t\t\tisSameSerial = true;\n\t\t\t}\n\n\t\t\toldSerial = serial.val as string;\n\t\t}\n\n\t\treturn { sameTime: isSameTime, sameSerial: isSameSerial };\n\t} catch (error: any) {\n\t\terrorLogging({ text: \"Error in compareCreationTimeAndSerial\", error, _this });\n\t\treturn { sameTime: false, sameSerial: false };\n\t}\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,oBAAgC;AAChC,qBAA6B;AAC7B,IAAI;AACJ,IAAI;AAEG,MAAM,+BAA+B,YAAiE;AAC5G,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AAEpB,MAAI;AACH,UAAM,eAAe,MAAM,MAAM,qBAAqB,+BAA+B;AACrF,UAAM,SAAS,MAAM,MAAM,qBAAqB,+BAA+B;AAE/E,QAAI,aAAa;AACjB,QAAI,eAAe;AAEnB,YAAI,+BAAgB,YAAY,GAAG;AAClC,UAAI,mBAAmB,aAAa,KAAK;AACxC,qBAAa;AAAA,MACd;AACA,wBAAkB,aAAa;AAAA,IAChC;AACA,YAAI,+BAAgB,MAAM,GAAG;AAC5B,UAAI,aAAa,OAAO,KAAK;AAC5B,uBAAe;AAAA,MAChB;AAEA,kBAAY,OAAO;AAAA,IACpB;AAEA,WAAO,EAAE,UAAU,YAAY,YAAY,aAAa;AAAA,EACzD,SAAS,OAAY;AACpB,qCAAa,EAAE,MAAM,yCAAyC,OAAO,MAAM,CAAC;AAC5E,WAAO,EAAE,UAAU,OAAO,YAAY,MAAM;AAAA,EAC7C;AACD;",
  "names": []
}
