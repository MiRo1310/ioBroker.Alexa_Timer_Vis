{
  "version": 3,
  "sources": ["../../src/lib/compare-serial.ts"],
  "sourcesContent": ["import { useStore } from \"../store/store\";\r\nimport { isIobrokerValue } from \"./global\";\r\nlet oldCreationTime: ioBroker.StateValue | null;\r\nlet oldSerial: string;\r\n\r\nexport const compareCreationTimeAndSerial = async (): Promise<{ sameTime: boolean; sameSerial: boolean }> => {\r\n\tconst store = useStore();\r\n\tconst _this = store._this;\r\n\r\n\ttry {\r\n\t\tconst creationTime = await _this.getForeignStateAsync(\"alexa2.0.History.creationTime\");\r\n\t\tconst serial = await _this.getForeignStateAsync(\"alexa2.0.History.serialNumber\");\r\n\r\n\t\tlet isSameTime = false;\r\n\t\tlet isSameSerial = false;\r\n\r\n\t\tif (isIobrokerValue(creationTime)) {\r\n\t\t\tif (oldCreationTime == creationTime.val) {\r\n\t\t\t\tisSameTime = true;\r\n\t\t\t}\r\n\t\t\toldCreationTime = creationTime.val;\r\n\t\t}\r\n\t\tif (isIobrokerValue(serial)) {\r\n\t\t\tif (oldSerial == serial.val) {\r\n\t\t\t\tisSameSerial = true;\r\n\t\t\t}\r\n\r\n\t\t\toldSerial = serial.val as string;\r\n\t\t}\r\n\r\n\t\treturn { sameTime: isSameTime, sameSerial: isSameSerial };\r\n\t} catch (error: any) {\r\n\t\t_this.log.error(\"Error in compareCreationTimeAndSerial: \" + JSON.stringify(error));\r\n\t\treturn { sameTime: false, sameSerial: false };\r\n\t}\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,oBAAgC;AAChC,IAAI;AACJ,IAAI;AAEG,MAAM,+BAA+B,YAAiE;AAC5G,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AAEpB,MAAI;AACH,UAAM,eAAe,MAAM,MAAM,qBAAqB,+BAA+B;AACrF,UAAM,SAAS,MAAM,MAAM,qBAAqB,+BAA+B;AAE/E,QAAI,aAAa;AACjB,QAAI,eAAe;AAEnB,YAAI,+BAAgB,YAAY,GAAG;AAClC,UAAI,mBAAmB,aAAa,KAAK;AACxC,qBAAa;AAAA,MACd;AACA,wBAAkB,aAAa;AAAA,IAChC;AACA,YAAI,+BAAgB,MAAM,GAAG;AAC5B,UAAI,aAAa,OAAO,KAAK;AAC5B,uBAAe;AAAA,MAChB;AAEA,kBAAY,OAAO;AAAA,IACpB;AAEA,WAAO,EAAE,UAAU,YAAY,YAAY,aAAa;AAAA,EACzD,SAAS,OAAY;AACpB,UAAM,IAAI,MAAM,4CAA4C,KAAK,UAAU,KAAK,CAAC;AACjF,WAAO,EAAE,UAAU,OAAO,YAAY,MAAM;AAAA,EAC7C;AACD;",
  "names": []
}
