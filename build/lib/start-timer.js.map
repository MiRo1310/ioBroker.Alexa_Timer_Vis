{
  "version": 3,
  "sources": ["../../src/lib/start-timer.ts"],
  "sourcesContent": ["import { TimerSelector, timerObject, Timers } from \"./timer-data\";\r\nimport { Store, useStore } from \"../store/store\";\r\nimport { isString, timeToString } from \"./global\";\r\nimport { getInputDevice } from \"./get-input-device\";\r\nimport { interval } from \"./interval\";\r\nimport AlexaTimerVis from \"../main\";\r\nimport { registerIdToGetTimerName } from \"./timer-name\";\r\n\r\nexport const startTimer = async (sec: number, name: string, inputString: string): Promise<void> => {\r\n\tconst store = useStore();\r\n\tconst _this = store._this;\r\n\ttry {\r\n\t\tconst timerSelector = selectAvailableTimer(_this);\r\n\r\n\t\tawait getInputDevice(timerObject.timer[timerSelector as keyof typeof timerObject.timer]);\r\n\t\tawait registerIdToGetTimerName(timerSelector);\r\n\r\n\t\tconst jsonAlexa = await _this.getForeignStateAsync(`alexa2.0.History.json`);\r\n\t\tconst startTimer: number = getStartTimerValue(jsonAlexa);\r\n\r\n\t\tconst start_Time = timeToString(startTimer);\r\n\t\tconst timerMilliseconds = sec * 1000;\r\n\t\tconst endTimeMilliseconds = startTimer + timerMilliseconds;\r\n\t\tconst endTimeString = timeToString(endTimeMilliseconds);\r\n\r\n\t\tsaveToObject(timerSelector, endTimeMilliseconds, endTimeString, start_Time);\r\n\r\n\t\tawait setDeviceNameInStateName(timerSelector, _this, store);\r\n\r\n\t\tconst timer = timerObject.timer[timerSelector as keyof typeof timerObject.timer];\r\n\r\n\t\tif (isMoreThanAMinute(sec)) {\r\n\t\t\tinterval(sec, timerSelector, inputString, name, timer, store.intervalMore60 * 1000, false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttimerObject.timer.timer1.timerInterval = store.intervalLess60 * 1000;\r\n\r\n\t\tinterval(sec, timerSelector, inputString, name, timer, store.intervalLess60 * 1000, true);\r\n\t} catch (e: any) {\r\n\t\t_this.log.error(\"Error in startTimer: \" + JSON.stringify(e));\r\n\t\t_this.log.error(\"Error in startTimer: \" + JSON.stringify(e.stack));\r\n\t}\r\n};\r\n\r\nfunction getStartTimerValue(jsonAlexa: ioBroker.State | null | undefined): number {\r\n\tif (isString(jsonAlexa?.val)) {\r\n\t\treturn JSON.parse(jsonAlexa.val).creationTime;\r\n\t}\r\n\treturn new Date().getTime();\r\n}\r\n\r\nfunction selectAvailableTimer(_this: AlexaTimerVis): TimerSelector {\r\n\tfor (let i = 0; i < Object.keys(timerObject.timerActive.timer).length; i++) {\r\n\t\tconst key = Object.keys(timerObject.timerActive.timer)[i] as keyof typeof timerObject.timerActive.timer;\r\n\r\n\t\tif (timerObject.timerActive.timer[key] === false) {\r\n\t\t\ttimerObject.timerActive.timer[key] = true;\r\n\t\t\treturn key as keyof Timers;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function setDeviceNameInStateName(\r\n\ttimerBlock: string | undefined,\r\n\t_this: AlexaTimerVis,\r\n\tstore: Store,\r\n): Promise<void> {\r\n\tif (isString(timerBlock)) {\r\n\t\tawait _this.setObjectAsync(\"alexa-timer-vis.0.\" + timerBlock, {\r\n\t\t\ttype: \"device\",\r\n\t\t\tcommon: { name: `${store.deviceName}` },\r\n\t\t\tnative: {},\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction isMoreThanAMinute(sec: number): boolean {\r\n\treturn sec > 60;\r\n}\r\n\r\nfunction saveToObject(\r\n\ttimerBlock: TimerSelector,\r\n\tendTimeNumber: number,\r\n\tendTimeString: string,\r\n\tstart_Time: string,\r\n): void {\r\n\tif (timerBlock) {\r\n\t\ttimerObject.timer[timerBlock].endTime = endTimeNumber;\r\n\t\ttimerObject.timer[timerBlock].end_Time = endTimeString;\r\n\t\ttimerObject.timer[timerBlock].start_Time = start_Time;\r\n\t}\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmD;AACnD,mBAAgC;AAChC,oBAAuC;AACvC,8BAA+B;AAC/B,sBAAyB;AAEzB,wBAAyC;AAElC,MAAM,aAAa,OAAO,KAAa,MAAc,gBAAuC;AAClG,QAAM,YAAQ,uBAAS;AACvB,QAAM,QAAQ,MAAM;AACpB,MAAI;AACH,UAAM,gBAAgB,qBAAqB,KAAK;AAEhD,cAAM,wCAAe,8BAAY,MAAM,aAA+C,CAAC;AACvF,cAAM,4CAAyB,aAAa;AAE5C,UAAM,YAAY,MAAM,MAAM,qBAAqB,uBAAuB;AAC1E,UAAMA,cAAqB,mBAAmB,SAAS;AAEvD,UAAM,iBAAa,4BAAaA,WAAU;AAC1C,UAAM,oBAAoB,MAAM;AAChC,UAAM,sBAAsBA,cAAa;AACzC,UAAM,oBAAgB,4BAAa,mBAAmB;AAEtD,iBAAa,eAAe,qBAAqB,eAAe,UAAU;AAE1E,UAAM,yBAAyB,eAAe,OAAO,KAAK;AAE1D,UAAM,QAAQ,8BAAY,MAAM,aAA+C;AAE/E,QAAI,kBAAkB,GAAG,GAAG;AAC3B,oCAAS,KAAK,eAAe,aAAa,MAAM,OAAO,MAAM,iBAAiB,KAAM,KAAK;AACzF;AAAA,IACD;AAEA,kCAAY,MAAM,OAAO,gBAAgB,MAAM,iBAAiB;AAEhE,kCAAS,KAAK,eAAe,aAAa,MAAM,OAAO,MAAM,iBAAiB,KAAM,IAAI;AAAA,EACzF,SAAS,GAAQ;AAChB,UAAM,IAAI,MAAM,0BAA0B,KAAK,UAAU,CAAC,CAAC;AAC3D,UAAM,IAAI,MAAM,0BAA0B,KAAK,UAAU,EAAE,KAAK,CAAC;AAAA,EAClE;AACD;AAEA,SAAS,mBAAmB,WAAsD;AACjF,UAAI,wBAAS,uCAAW,GAAG,GAAG;AAC7B,WAAO,KAAK,MAAM,UAAU,GAAG,EAAE;AAAA,EAClC;AACA,UAAO,oBAAI,KAAK,GAAE,QAAQ;AAC3B;AAEA,SAAS,qBAAqB,OAAqC;AAClE,WAAS,IAAI,GAAG,IAAI,OAAO,KAAK,8BAAY,YAAY,KAAK,EAAE,QAAQ,KAAK;AAC3E,UAAM,MAAM,OAAO,KAAK,8BAAY,YAAY,KAAK,EAAE,CAAC;AAExD,QAAI,8BAAY,YAAY,MAAM,GAAG,MAAM,OAAO;AACjD,oCAAY,YAAY,MAAM,GAAG,IAAI;AACrC,aAAO;AAAA,IACR;AAAA,EACD;AACD;AAEA,eAAe,yBACd,YACA,OACA,OACgB;AAChB,UAAI,wBAAS,UAAU,GAAG;AACzB,UAAM,MAAM,eAAe,uBAAuB,YAAY;AAAA,MAC7D,MAAM;AAAA,MACN,QAAQ,EAAE,MAAM,GAAG,MAAM,UAAU,GAAG;AAAA,MACtC,QAAQ,CAAC;AAAA,IACV,CAAC;AAAA,EACF;AACD;AAEA,SAAS,kBAAkB,KAAsB;AAChD,SAAO,MAAM;AACd;AAEA,SAAS,aACR,YACA,eACA,eACA,YACO;AACP,MAAI,YAAY;AACf,kCAAY,MAAM,UAAU,EAAE,UAAU;AACxC,kCAAY,MAAM,UAAU,EAAE,WAAW;AACzC,kCAAY,MAAM,UAAU,EAAE,aAAa;AAAA,EAC5C;AACD;",
  "names": ["startTimer"]
}
