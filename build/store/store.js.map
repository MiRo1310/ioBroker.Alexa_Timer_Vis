{
  "version": 3,
  "sources": ["../../src/store/store.ts"],
  "sourcesContent": ["import AlexaTimerVis from \"../main\";\nimport { AlexaActiveTimerList } from \"../types\";\nimport { TimerCondition } from \"../lib/timer-data\";\n\nlet store: Store;\nexport function useStore(): Store {\n\tif (!store) {\n\t\tstore = {\n\t\t\t_this: \"\" as unknown as AlexaTimerVis,\n\t\t\ttoken: \"\",\n\t\t\tvalHourForZero: \"\",\n\t\t\tvalMinuteForZero: \"\",\n\t\t\tvalSecondForZero: \"\",\n\t\t\tpathAlexaSummary: \"\",\n\t\t\tintervalMore60: 0,\n\t\t\tintervalLess60: 0,\n\t\t\tdebounceTime: 0,\n\t\t\tunitHour1: \"\",\n\t\t\tunitHour2: \"\",\n\t\t\tunitHour3: \"\",\n\t\t\tunitMinute1: \"\",\n\t\t\tunitMinute2: \"\",\n\t\t\tunitMinute3: \"\",\n\t\t\tunitSecond1: \"\",\n\t\t\tunitSecond2: \"\",\n\t\t\tunitSecond3: \"\",\n\t\t\ttimerAction: null,\n\t\t\tquestionAlexa: false,\n\t\t\tinterval: null,\n\t\t\tdeviceSerialNumber: null,\n\t\t\tdeviceName: null,\n\t\t\tlastTimers: [],\n\t\t\toldAlexaTimerObject: [],\n\t\t\tgetAlexaInstanceObject: () => {\n\t\t\t\tconst dataPointArray = store.pathAlexaSummary.split(\".\");\n\t\t\t\treturn {\n\t\t\t\t\tadapter: dataPointArray[0],\n\t\t\t\t\tinstance: dataPointArray[1],\n\t\t\t\t\tchannel_history: dataPointArray[2],\n\t\t\t\t};\n\t\t\t},\n\t\t\tisAddTimer: () => {\n\t\t\t\treturn store.timerAction === \"SetNotificationIntent\";\n\t\t\t},\n\t\t\tisShortenTimer: () => {\n\t\t\t\treturn store.timerAction === \"ShortenNotificationIntent\";\n\t\t\t},\n\t\t\tisExtendTimer: () => {\n\t\t\t\treturn store.timerAction === \"ExtendNotificationIntent\";\n\t\t\t},\n\t\t\tisDeleteTimer: () => {\n\t\t\t\treturn store.timerAction === \"RemoveNotificationIntent\";\n\t\t\t},\n\t\t};\n\t}\n\treturn store;\n}\n\nexport interface Store {\n\t_this: AlexaTimerVis;\n\ttoken: string | null;\n\tvalHourForZero: string;\n\tvalMinuteForZero: string;\n\tvalSecondForZero: string;\n\tpathAlexaSummary: string;\n\tintervalMore60: number;\n\tintervalLess60: number;\n\tdebounceTime: number;\n\tunitHour1: string;\n\tunitHour2: string;\n\tunitHour3: string;\n\tunitMinute1: string;\n\tunitMinute2: string;\n\tunitMinute3: string;\n\tunitSecond1: string;\n\tunitSecond2: string;\n\tunitSecond3: string;\n\ttimerAction: TimerCondition | null;\n\tquestionAlexa: boolean;\n\tinterval: ioBroker.Interval | undefined;\n\tdeviceSerialNumber: string | null;\n\tdeviceName: string | null;\n\tlastTimers: LastTimer[];\n\toldAlexaTimerObject: AlexaActiveTimerList[];\n\tgetAlexaInstanceObject: () => AlexaInstanceObject;\n\tisAddTimer: () => boolean;\n\tisShortenTimer: () => boolean;\n\tisExtendTimer: () => boolean;\n\tisDeleteTimer: () => boolean;\n}\ninterface AlexaInstanceObject {\n\tadapter: string;\n\tinstance: string;\n\tchannel_history: string;\n}\ninterface LastTimer {\n\ttimerSelector: string;\n\ttimerSerial: string;\n\tid: string;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,IAAI;AACG,SAAS,WAAkB;AACjC,MAAI,CAAC,OAAO;AACX,YAAQ;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,eAAe;AAAA,MACf,UAAU;AAAA,MACV,oBAAoB;AAAA,MACpB,YAAY;AAAA,MACZ,YAAY,CAAC;AAAA,MACb,qBAAqB,CAAC;AAAA,MACtB,wBAAwB,MAAM;AAC7B,cAAM,iBAAiB,MAAM,iBAAiB,MAAM,GAAG;AACvD,eAAO;AAAA,UACN,SAAS,eAAe,CAAC;AAAA,UACzB,UAAU,eAAe,CAAC;AAAA,UAC1B,iBAAiB,eAAe,CAAC;AAAA,QAClC;AAAA,MACD;AAAA,MACA,YAAY,MAAM;AACjB,eAAO,MAAM,gBAAgB;AAAA,MAC9B;AAAA,MACA,gBAAgB,MAAM;AACrB,eAAO,MAAM,gBAAgB;AAAA,MAC9B;AAAA,MACA,eAAe,MAAM;AACpB,eAAO,MAAM,gBAAgB;AAAA,MAC9B;AAAA,MACA,eAAe,MAAM;AACpB,eAAO,MAAM,gBAAgB;AAAA,MAC9B;AAAA,IACD;AAAA,EACD;AACA,SAAO;AACR;",
  "names": []
}
